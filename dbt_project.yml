version: 2

sources: 
  - name: public
    description: A Redshift database olist_order_payments
    database: stage
    tables:
      - name: olist_orders
        description: olist_orders
        loaded_at_field: order_purchase_timestamp
        freshness: 
          warn_after: {count: 12, period: hour}
          error_after: {count: 48, period: hour}
      - name: olist_order_payments
        description: olist_order_payments
        loaded_at_field: order_id
        freshness: 
          warn_after: {count: 12, period: hour}
          error_after: {count: 48, period: hour}
      - name: olist_products
        description: olist_products
      - name: olist_order_items
        description: olist_order_items
        loaded_at_field: shipping_limit_date
        freshness: 
          warn_after: {count: 12, period: hour}
          error_after: {count: 48, period: hour}

models:
  - name: total_orders
    tests:
      - unique:
          column_name: order_purchase_date

  - name: total_customers
    tests:
      - unique:
          column_name: order_purchase_date

  - name: total_revenue
    tests:
      - not_null:
          column_name: revenue_usd
      - relationships:
          to: total_orders
          field: order_purchase_date

  - name: average_revenue_per_order
    tests:
      - not_null:
          column_name: average_revenue_per_order_usd
      - relationships:
          to: total_orders
          field: order_purchase_date
      - relationships:
          to: total_revenue
          field: revenue_usd

  - name: top_3_product_categories_by_revenue
    tests:
      - not_null:
          column_name: top_3_product_categories_by_revenue

  - name: top_3_product_categories_revenue_percentage
    tests:
      - not_null:
          column_name: top_3_product_categories_revenue_percentage

  - name: my_unit_test
    tests:
      - custom:
          severity: error
          fail_if: << 10 != order_count >>
          message: "Total orders count is not equal to 10"

  - name: total_orders_unit_test
    tests:
      - relationships:
          to: total_orders
          field: order_purchase_date

  - name: total_customers_unit_test
    tests:
      - relationships:
          to: total_customers
          field: order_purchase_date

  - name: total_revenue_unit_test
    tests:
      - relationships:
          to: total_revenue
          field: order_purchase_date

  - name: average_revenue_per_order_unit_test
    tests:
      - relationships:
          to: average_revenue_per_order
          field: order_purchase_date

  - name: top_3_product_categories_by_revenue_unit_test
    tests:
      - relationships:
          to: top_3_product_categories_by_revenue
          field: order_purchase_date

  - name: top_3_product_categories_revenue_percentage_unit_test
    tests:
      - relationships:
          to: top_3_product_categories_revenue_percentage
          field: order_purchase_date

test:
  - my_unit_test:
      description: Custom unit test
      severity: error
      metadata:
        - key: expected_result
          value: "10"
      query: |
        SELECT COUNT(*) AS order_count
        FROM total_orders
        WHERE order_purchase_date = '2022-01-01'

  - total_orders_unit_test:
      description: Total Orders unit test
      severity: error
      query: |
        SELECT COUNT(*) AS order_count
        FROM total_orders

  - total_customers_unit_test:
      description: Total Customers unit test
      severity: error
      query: |
        SELECT COUNT(DISTINCT customer_id) AS customer_count
        FROM total_customers

  - total_revenue_unit_test:
      description: Total Revenue unit test
      severity: error
      query: |
        SELECT SUM(revenue_usd) AS total_revenue
        FROM total_revenue

  - average_revenue_per_order_unit_test:
      description: Average Revenue per Order unit test
      severity: error
      query: |
        SELECT AVG(average_revenue_per_order_usd) AS average_revenue_per_order
        FROM average_revenue_per_order

  - top_3_product_categories_by_revenue_unit_test:
      description: Top 3 Product Categories by Revenue unit test
      severity: error
      query: |
        SELECT top_3_product_categories_by_revenue
        FROM top_3_product_categories_by_revenue

  - top_3_product_categories_revenue_percentage_unit_test:
      description: Top 3 Product Categories Revenue Percentage unit test
      severity: error
      query: |
        SELECT top_3_product_categories_revenue_percentage
        FROM top_3_product_categories_revenue_percentage
